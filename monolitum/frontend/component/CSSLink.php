<?php

namespace monolitum\frontend\component;

use monolitum\core\GlobalContext;
use monolitum\core\Renderable_Node;
use monolitum\frontend\Rendered;
use monolitum\backend\params\Path;
use monolitum\backend\res\Active_Resolve_Res;
use monolitum\backend\res\ResResolver;
use monolitum\frontend\html\HtmlElement;

class CSSLink extends Renderable_Node implements Head{

    /**
     * @var Path
     */
    private $path;

    /**
     * @var ResResolver
     */
    private $pathResolver;

    /**
     * @param Path $path
     * @param $builder
     */
    public function __construct($path, $builder = null)
    {
        parent::__construct($builder);
        $this->path = $path;
    }

    protected function buildNode()
    {
        $active = new Active_Resolve_Res($this->path);
        GlobalContext::add($active);
        $this->pathResolver = $active->getResResolver();
        parent::buildNode(); // TODO: Change the autogenerated stub
    }

    public function render()
    {
        $link = new HtmlElement("link");
        $link->setAttribute("rel", "stylesheet");
        $link->setAttribute("href", $this->pathResolver->resolve());
        
        return Rendered::of($link);
    }

    /**
     * @param Path $path
     */
    public static function addLocal($path){
        GlobalContext::add(new CSSLink($path));
    }
    
    
}