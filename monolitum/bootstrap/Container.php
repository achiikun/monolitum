<?php

namespace monolitum\bootstrap;

use monolitum\core\GlobalContext;
use monolitum\frontend\ElementComponent;
use monolitum\frontend\html\HtmlElement;

class Container extends ElementComponent
{

    /**
     * @var string
     */
    private $breakpoint;

    public function __construct($builder = null)
    {
        parent::__construct(new HtmlElement("div"), $builder);
    }

    public function setBreakpoint($breakpoint){
        $this->breakpoint = $breakpoint;
        return $this;
    }

    public function xs(){
        $this->breakpoint = BS::BREAKPOINT_XS;
        return $this;
    }

    public function sm(){
        $this->breakpoint = BS::BREAKPOINT_SM;
        return $this;
    }

    public function md(){
        $this->breakpoint = BS::BREAKPOINT_MD;
        return $this;
    }

    public function lg(){
        $this->breakpoint = BS::BREAKPOINT_LG;
        return $this;
    }

    public function xl(){
        $this->breakpoint = BS::BREAKPOINT_XL;
        return $this;
    }

    public function xxl(){
        $this->breakpoint = BS::BREAKPOINT_XXL;
        return $this;
    }

    public function fluid(){
        $this->breakpoint = BS::BREAKPOINT_FLUID;
        return $this;
    }

    protected function afterBuildNode()
    {
        if($this->breakpoint == BS::BREAKPOINT_XS || $this->breakpoint == null)
            $this->addClass("container");
        else if($this->breakpoint == BS::BREAKPOINT_FLUID)
            $this->addClass("container-fluid");
        else
            $this->addClass("container-" . $this->breakpoint);

        parent::afterBuildNode(); // TODO: Change the autogenerated stub
    }

    /**
     * @param callable $builder
     * @return Container
     */
    public static function add($builder)
    {
        $fc = new Container($builder);
        GlobalContext::add($fc);
        return $fc;
    }

    /**
     * @param callable $builder
     * @return Container
     */
    public static function of($builder)
    {
        $fc = new Container($builder);
        return $fc;
    }

}